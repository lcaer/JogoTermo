<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAeAsAAAJNU0Z0AUkBTAIBAQIB
        AAEIAQABCAEAARYBAAEWAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABWAMAARYDAAEBAQABIAUAAUAB
        HhoAAzQBbgMLAfADHwHRAxgBISgAAxgBIgMeAdMDCwHxAzQBcCAAAw4BEgMzAWsDLAG0AxQB4wMDAfsD
        AwH7AxQB5AMsAbQDMwFrAw4BEswAAxoBJAMCAfwDNQF+Ax8B0QMzAZMoAAMzAZMDHwHRAzUBfQMCAfwD
        GgElFAADBgEIAzUBgQMKAfMDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMKAfMDNQGBAwYB
        CMAAAzQBbwMCAfwDAAH/AyUBOgMvAagDLwGpKAADMQGiAzABpwMlAToDAAH/AwIB/AM0AXAMAAMXBCAB
        0AMAAf8DAAH/AwAB/wMHAfcDJgHEAzABpAMwAaQDJgHCAwcB9gMAAf8DAAH/AwAB/wMgAdADFwEgvAAD
        CwHxAzUBfgMlATsDBAEFAzQBcAMEAfoDLAFNBAEDEAEVAxEBFwMRARcDEQEXAxEBFwMQARUEAQMhATED
        DgHtAzMBkwMEAQUDJQE6AzUBfQMLAfEIAAMXASADFAHjAwAB/wMAAf8DEgHnAzMBaAMJAQwQAAMJAQsD
        MgFkAxUB4gMAAf8DAAH/AxQB4wMXASC4AAMeAdMDIAHQAzABpgM0AZEDAwEEAzQBiwMHAfcDHgHUAwAB
        /wMAAf8DAAH/AwAB/wMAAf8DAAH/Ax8B0QMOAe0DLgGuAwQBBQM0AW0DLwGoAx8B0QMeAdIEAAMGAQgD
        IAHQAwAB/wMAAf8DAAH/AzUBiSAAAwsBDgMuAa0DAAH/AwAB/wMgAdADBgEItAADGAEiAzQBlAMwAaQD
        DAHvAzEBowMCAQMDLgGtAxQB4wMkATgDCwHxAzUBewM1AXsDCwHxAyQBOAMUAeMDKgG6AwQBBQM1AXkD
        AgH8Ay8BqgM0AZQDGAEiBAADNQGBAwAB/wMAAf8DAAH/AwAB/wMDAfsDMAFYIAADAgEDAy4BrQMAAf8D
        AAH/AzUBgcAAAyUBOgMKAfMDMwGXAzQBiAMkAcYEAAMxAVwDEQEXAxEBFwMxAVwEAAMkAcYDNAGHAzUB
        eQMCAfwDMQFcDAADDgESAwoB8wMAAf8DEgHnAzQBhwMDAfsDAAH/AwMB+wMwAVggAAMLAQ4DFQHiAwAB
        /wMKAfMDDgESwAADKQFDAwcB9wMCAfwDNAGRBAAEAgMaASQDGgEkBAIEAAM0AZEDBQH5AwIB/AMxAVwQ
        AAMzAWsDAAH/AwAB/wMzAWcEAAMvAVUDAwH7AwAB/wMDAfsDMAFYIAADMgFkAwAB/wMAAf8DMwFrwAAD
        DgESAxAB6QMxAZ8EAQQAAyQBOAMEAfoDBAH6AyQBOAQABAEDMgGeAxAB6wMOARIQAAMsAbQDAAH/AwcB
        9gMJAQwIAAMvAVUDAwH7AwAB/wMDAfsDMAFYHAADCQELAwcB9gMAAf8DLAG0wAADNQGBAxUB4gMIAQoI
        AAQCAx8B0QMfAdEEAggAAwgBCgMVAeIDNQGCEAADFAHkAwAB/wMmAcMQAAMvAVUDAwH7AwAB/wMDAfsD
        MAFYHAADJgHCAwAB/wMUAeTAAAMbAdgDNQF+BAADMQFfAzIBnQMrAUgDGgElAxoBJQMrAUgDMgGdAzEB
        XwQAAzUBfQMbAdoQAAMDAfsDAAH/AzABpBQAAy8BVQMDAfsDAAH/AwMB+wMwAVgYAAMwAaQDAAH/AwMB
        +7wAAwcBCQMBAf4DKQFEAy0BTgMDAfsDKgG5AwIB/AMdASoDHQEqAwIB/AMqAboDAwH7Ay0BTgMpAUMD
        AQH+AwkBCwwAAwMB+wMAAf8DMAGkGAADLwFVAwMB+wMAAf8DAwH7AzABWBQAAzABpAMAAf8DAwH7vAAD
        DwETAwAB/wMjATYDNQF4AxgB3QMbASYDBQH5Ay0BUAMtAVADBQH5AxsBJgMYAd0DNQF4AyQBNwMAAf8D
        DwEUDAADFAHkAwAB/wMmAcIcAAMvAVUDAwH7AwAB/wMDAfsDMAFYEAADJgHDAwAB/wMUAeS8AAMCAQMD
        BwH3Ay8BVQMXASADEwHmAwAB/wMeAdIDCQEMAwkBDAMeAdIDAAH/AxMB5gMXASADLwFWAwcB9gMCAQMM
        AAMsAbQDAAH/AwcB9gMJAQscAAMvAVUDAwH7AwAB/wMDAfsDMAFYCAADCQEMAwcB9gMAAf8DLAG0wAAD
        KQG8AzEBogQAAwkBDAMhATEDBQEGCAADBQEGAyEBMQMJAQwEAAMwAaUDKQG8EAADMwFrAwAB/wMAAf8D
        MgFkIAADLwFVAwMB+wMAAf8DAwH7AzABWAQAAzMBZwMAAf8DAAH/AzMBa7wAAyEBMQMOAe0DBAH6AyAB
        MCAAAyIBMwMDAfsDBwH2AywBTAwAAw4BEgMKAfMDAAH/AxUB4gMLAQ4gAAMvAVUDAwH7AwAB/wMDAfsD
        NQGJAxIB5wMAAf8DCgHzAw4BErAAAxgBIgMzAZUDMAGlAw4B7QMuAa4DLAGzAxcB3wMaASQYAAMbAScD
        FQHiAy0BrwM0AY0DBAH6Ay8BqQM0AZQDGAEiBAADNQGBAwAB/wMAAf8DLgGtAwIBAyAAAy8BVQMDAfsD
        AAH/AwAB/wMAAf8DAAH/AzUBgbQAAx8B0QMgAc8DMAGkAzQBkQMEAQUDNQGBAwAB/wMLAfEDNQF5AxUB
        HAgAAxYBHwM1AX0DCgHyAwAB/wMyAZ4DAwEEAzQBcAMvAagDHwHRAx4B0gQAAwYBCAMgAdADAAH/AwAB
        /wMuAa0DCgENIAADNAGHAwAB/wMAAf8DAAH/AyAB0AMGAQi0AAMNAe4DNQGBAycBPQMGAQcDNAFsAwIB
        /AMyAWADNAF1AxEB6AMAAf8DCwHwAwsB8QMAAf8DFAHlAzQBcQMpAUQDCwHwAzQBkgMEAQUDJQE5AzUB
        fQMLAfEIAAMXASADFAHjAwAB/wMAAf8DFQHiAzIBZAMJAQsQAAMJAQwDMwFoAxIB5wMAAf8DAAH/AxQB
        4wMXASC4AAMzAWsDAwH7AwAB/wMnAT0DMAGlAy8BrAgAAwMBBAMkATcDMAFaAzABWQMjATUDAgEDCAAD
        MQGiAzABpwMlAToDAAH/AwIB/AM0AXAMAAMXBCAB0AMAAf8DAAH/AwAB/wMHAfYDJgHCAzABpAMwAaQD
        JgHDAwcB9wMAAf8DAAH/AwAB/wMgAdADFwEgwAADGAEhAwMB+wM1AYIDIAHQAzMBligAAzMBkwMfAdED
        NQF9AwIB/AMaASUUAAMGAQgDNQGBAwoB8wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwoB
        8wM1AYEDBgEIyAADMwFrAw0B7gMfAdEDGAEiKAADGAEiAx4B0wMLAfEDNAFwIAADDgESAzMBawMsAbQD
        FAHkAwMB+wMDAfsDFAHkAywBtAMzAWsDDgESyAABQgFNAT4HAAE+AwABKAMAAVgDAAEWAwABAQEAAQEF
        AAEIAQEWAAP/AQABwwH/AQ8B8AEDAfAGAAGDAf8BBwHAAQAB8AYAAQMB/wEDAYABAAFwCAABAwEBAeAB
        MAgAAQIBBwH4ARAIAAECAQMB/AEQBgAB4AGEARwBAQH+BwAB8AGEATwBIAH/BwAB8AGEATwBMAF/BwAB
        8QGGATwBeAE/AYAGAAHyAQEBPAF8AR8BgAYAAeABAAEcAX4BDwGABgAB4AEAARwBfwEHAYAGAAHgAQAB
        HAE/AYMHAAHyATEBPAE/AcEHAAHhAf4BHAEfAeAIAAH8AQIBDwHwARAHAAEwAQIBBwH4ARAIAAEDAQEB
        4AEwBgADAwGAAQABcAYAAYMB/wEHAcABAAHwBgABwwH/AQ8B8AEDAfAGAAs=
</value>
  </data>
</root>