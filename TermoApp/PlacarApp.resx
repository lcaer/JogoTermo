<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imgList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="imgList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAEZTeXN0ZW0uV2luZG93cy5Gb3JtcywgQ3VsdHVyZT1uZXV0cmFs
        LCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQEAAAAmU3lzdGVtLldpbmRvd3MuRm9ybXMu
        SW1hZ2VMaXN0U3RyZWFtZXIBAAAABERhdGEHAgIAAAAJAwAAAA8DAAAAdgsAAAJNU0Z0AUkBTAIBAQIB
        AAFIAQABSAEAARYBAAEWAQAE/wEhAQAI/wFCAU0BNgcAATYDAAEoAwABWAMAARYDAAEBAQABIAUAAUAB
        HhoAAz8BbgNAAfADXQHRAxgBISgAAxkBIgNbAdMDQQHxA0ABcCAAAw4BEgM+AWsDVQG0A1YB4wMbAfsD
        GwH7A1MB5ANVAbQDPgFrAw4BEswAAxoBJAMSAfwDRgF+A10B0QNNAZMoAANNAZMDXQHRA0YBfQMSAfwD
        GwElFAADBgEIA0YBgQM6AfMDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wM6AfMDRgGBAwYB
        CMAAA0ABbwMSAfwDAAH/AycBOgNSAagDUwGpKAADUQGiA1MBpwMnAToDAAH/AxIB/ANAAXAMAAMYASAD
        WwHQAwAB/wMAAf8DAAH/Ay4B9wNaAcQDUQGkA1EBpANXAcIDLQH2AwAB/wMAAf8DAAH/A1sB0AMYASC8
        AANBAfEDRgF+AygBOwMEAQUDQAFwAx0B+gMxAU0EAQMQARUDEgEXAxIBFwMSARcDEgEXAxABFQQBAyIB
        MQNIAe0DTQGTAwQBBQMnAToDRgF9A0EB8QgAAxgBIANWAeMDAAH/AwAB/wNTAecDPQFoAwkBDBAAAwkB
        CwM7AWQDVgHiAwAB/wMAAf8DVgHjAxgBILgAA1sB0wNbAdADUwGmA0wBkQMDAQQDSgGLAy4B9wNdAdQD
        AAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DXQHRA0gB7QNVAa4DBAEFAz8BbQNSAagDXQHRA1sB0gQAAwYB
        CANbAdADAAH/AwAB/wMAAf8DSgGJIAADCwEOA1UBrQMAAf8DAAH/A1sB0AMGAQi0AAMZASIDTgGUA1EB
        pANCAe8DUgGjAwIBAwNVAa0DVgHjAyYBOANBAfEDRAF7A0QBewNBAfEDJgE4A1YB4wNYAboDBAEFA0QB
        eQMSAfwDUwGqA04BlAMZASIEAANGAYEDAAH/AwAB/wMAAf8DAAH/AxsB+wM2AVggAAMCAQMDVQGtAwAB
        /wMAAf8DRgGBwAADJwQ6AfMDTgGXA0kBiANZAcYEAAM4AVwDEgEXAxIBFwM4AVwEAANZAcYDSQGHA0QB
        eQMSAfwDOAFcDAADDgESAzoB8wMAAf8DUwHnA0kBhwMbAfsDAAH/AxsB+wM2AVggAAMLAQ4DVgHiAwAB
        /wM6AfMDDgESwAADLAFDAy4B9wMSAfwDTAGRBAAEAgMaASQDGgEkBAIEAANMAZEDIAH5AxIB/AM4AVwQ
        AAM+AWsDAAH/AwAB/wM9AWcEAAM1AVUDGwH7AwAB/wMbAfsDNgFYIAADOwFkAwAB/wMAAf8DPgFrwAAD
        DgESA04B6QNQAZ8EAQQAAyYBOAMdAfoDHQH6AyYBOAQABAEDUQGeA08B6wMOARIQAANVAbQDAAH/Ay0B
        9gMJAQwIAAM1AVUDGwH7AwAB/wMbAfsDNgFYHAADCQELAy0B9gMAAf8DVQG0wAADRgGBA1YB4gMIAQoI
        AAQCA10B0QNdAdEEAggAAwgBCgNWAeIDRwGCEAADUwHkAwAB/wNZAcMQAAM1AVUDGwH7AwAB/wMbAfsD
        NgFYHAADVwHCAwAB/wNTAeTAAANbAdgDRgF+BAADOQFfA1ABnQMuAUgDGwElAxsBJQMuAUgDUAGdAzkB
        XwQAA0YBfQNcAdoQAAMbAfsDAAH/A1EBpBQAAzUBVQMbAfsDAAH/AxsB+wM2AVgYAANRAaQDAAH/AxsB
        +7wAAwcECQH+Ay0BRAMxAU4DGwH7A1cBuQMSAfwDHgEqAx4BKgMSAfwDWAG6AxsB+wMxAU4DLAFDAwkB
        /gMJAQsMAAMbAfsDAAH/A1EBpBgAAzUBVQMbAfsDAAH/AxsB+wM2AVgUAANRAaQDAAH/AxsB+7wAAw8B
        EwMAAf8DJQE2A0QBeANZAd0DGwEmAyAB+QMzAVADMwFQAyAB+QMbASYDWQHdA0QBeAMlATcDAAH/Aw8B
        FAwAA1MB5AMAAf8DVwHCHAADNQFVAxsB+wMAAf8DGwH7AzYBWBAAA1kBwwMAAf8DUwHkvAADAgEDAy4B
        9wM1AVUDGAEgA1QB5gMAAf8DWwHSAwkBDAMJAQwDWwHSAwAB/wNUAeYDGAEgAzUBVgMtAfYDAgEDDAAD
        VQG0AwAB/wMtAfYDCQELHAADNQFVAxsB+wMAAf8DGwH7AzYBWAgAAwkBDAMtAfYDAAH/A1UBtMAAA1cB
        vANRAaIEAAMJAQwDIgExAwUBBggAAwUBBgMiATEDCQEMBAADUgGlA1cBvBAAAz4BawMAAf8DAAH/AzsB
        ZCAAAzUBVQMbAfsDAAH/AxsB+wM2AVgEAAM9AWcDAAH/AwAB/wM+AWu8AAMiATEDSAHtAx0B+gMhATAg
        AAMjATMDGwH7Ay0B9gMwAUwMAAMOARIDOgHzAwAB/wNWAeIDCwEOIAADNQFVAxsB+wMAAf8DGwH7A0oB
        iQNTAecDAAH/AzoB8wMOARKwAAMZASIDTgGVA1IBpQNIAe0DVQGuA1YBswNXAd8DGgEkGAADHAEnA1YB
        4gNVAa8DSwGNAx0B+gNTAakDTgGUAxkBIgQAA0YBgQMAAf8DAAH/A1UBrQMCAQMgAAM1AVUDGwH7AwAB
        /wMAAf8DAAH/AwAB/wNGAYG0AANdAdEDXQHPA1EBpANMAZEDBAEFA0YBgQMAAf8DQQHxA0QBeQMVARwI
        AAMXAR8DRgF9Az0B8gMAAf8DUQGeAwMBBANAAXADUgGoA10B0QNbAdIEAAMGAQgDWwHQAwAB/wMAAf8D
        VQGtAwoBDSAAA0kBhwMAAf8DAAH/AwAB/wNbAdADBgEItAADRwHuA0YBgQMpAT0DBgEHAz8BbAMSAfwD
        OgFgA0IBdQNPAegDAAH/A0AB8ANBAfEDAAH/A1UB5QNAAXEDLQFEA0AB8ANNAZIDBAEFAyYBOQNGAX0D
        QQHxCAADGAEgA1YB4wMAAf8DAAH/A1YB4gM7AWQDCQELEAADCQEMAz0BaANTAecDAAH/AwAB/wNWAeMD
        GAEguAADPgFrAxsB+wMAAf8DKQE9A1IBpQNVAawIAAMDAQQDJQQ3AVoDNgFZAyQBNQMCAQMIAANRAaID
        UwGnAycBOgMAAf8DEgH8A0ABcAwAAxgBIANbAdADAAH/AwAB/wMAAf8DLQH2A1cBwgNRAaQDUQGkA1kB
        wwMuAfcDAAH/AwAB/wMAAf8DWwHQAxgBIMAAAxgBIQMbAfsDRwGCA1sB0ANOAZYoAANNAZMDXQHRA0YB
        fQMSAfwDGwElFAADBgEIA0YBgQM6AfMDAAH/AwAB/wMAAf8DAAH/AwAB/wMAAf8DAAH/AwAB/wM6AfMD
        RgGBAwYBCMgAAz4BawNHAe4DXQHRAxkBIigAAxkBIgNbAdMDQQHxA0ABcCAAAw4BEgM+AWsDVQG0A1MB
        5AMbAfsDGwH7A1MB5ANVAbQDPgFrAw4BEsgAAUIBTQE+BwABPgMAASgDAAFYAwABFgMAAQEBAAEBBQAB
        CAEBFgAD/wEAAcMB/wEPAfABAwHwBgABgwH/AQcBwAEAAfAGAAEDAf8BAwGAAQABcAgAAQMBAQHgATAI
        AAECAQcB+AEQCAABAgEDAfwBEAYAAeABhAEcAQEB/gcAAfABhAE8ASAB/wcAAfABhAE8ATABfwcAAfEB
        hgE8AXgBPwGABgAB8gEBATwBfAEfAYAGAAHgAQABHAF+AQ8BgAYAAeABAAEcAX8BBwGABgAB4AEAARwB
        PwGDBwAB8gExATwBPwHBBwAB4QH+ARwBHwHgCAAB/AECAQ8B8AEQBwABMAECAQcB+AEQCAABAwEBAeAB
        MAYAAwMBgAEAAXAGAAGDAf8BBwHAAQAB8AYAAcMB/wEPAfABAwHwBgAL
</value>
  </data>
</root>